%li{ class: mr_css_classes(merge_request) }
  .merge-request-title
    = link_to_gfm truncate(merge_request.title, length: 80), project_merge_request_path(merge_request.target_project, merge_request), class: "row_title"
    - if merge_request.merged?
      %small.pull-right
        %i.fa.fa-check
        MERGED
    - else
      %span.pull-right.hidden-xs
        - if merge_request.for_fork?
          %span.light
            #{merge_request.source_project_namespace}:
        = truncate merge_request.source_branch, length: 25
        %i.fa.fa-angle-right.light
        = merge_request.target_branch
  .merge-request-info
    %span.light= "##{merge_request.iid}"
    - if merge_request.author
      authored by #{link_to_member(merge_request.source_project, merge_request.author)}
   
    - if merge_request.notes.any?
      %span
        %i.fa.fa-comments
        = merge_request.mr_and_commit_notes.count

    - if merge_request.votes_count > 0
      / = render 'votes/votes_inline', votable: merge_request
      
      - if merge_request.upvotes > 0
        %span.vote.upvote.label.label-success.avatar-voters
          %i.fa.fa-thumbs-up
          \+
          = merge_request.upvotes

          - merge_request.upvoters.each do |participant|
            = link_to_member(@project, participant, name: false, size: 16)
        

      - if merge_request.downvotes > 0
        %span.vote.downvote.label.label-danger.avatar-voters
          %i.fa.fa-thumbs-down
          \-
          = merge_request.downvotes

          - merge_request.downvoters.each do |participant|
            = link_to_member(@project, participant, name: false, size: 16)

    - if merge_request.open?
      / Declarando as variáveis
      - resultado_testes = merge_request.resultado_testes if not @project.nil?
      - commit = merge_request.ultimo_commit if not @project.nil?

      - if not commit.nil? and not resultado_testes.nil?
        - if resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 1
          %span.label.label-success.has_tooltip{'data-title' => "#{time_ago_in_words(resultado_testes.data_execucao)}" }
            %i.fa.fa-thumbs-up 
            Testes
        - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 2
          %span.label.label-danger.has_tooltip{'data-title' => "#{time_ago_in_words(resultado_testes.data_execucao)}" }
            %i.fa.fa-thumbs-down
            Testes
        - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 3
          %span.label.label-danger.has_tooltip{'data-title' => "#{time_ago_in_words(resultado_testes.data_execucao)}" }
            %i.fa.fa-chain-broken
            Em Conflito
        - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 4
          %span.label.label-warning
            %i.fa.fa-refresh.fa-spin
            Testes em Execução
        - else
          %span.label.label-inverse
            %i.fa.fa-thumbs-down
            Testes Pendentes
      - else
          %span.label.label-inverse
            %i.fa.fa-thumbs-down
            Testes Pendentes
            
    - if merge_request.milestone_id?
      %span
        %i.fa.fa-clock-o
        = merge_request.milestone.title

    - if merge_request.tasks?
      %span.task-status
        = merge_request.task_status

    .pull-right.hidden-xs
      %small updated #{time_ago_with_tooltip(merge_request.updated_at, 'bottom', 'merge_request_updated_ago')}

    .merge-request-labels
      - merge_request.labels.each do |label|
        = link_to project_merge_requests_path(merge_request.project, label_name: label.name) do
          = render_colored_label(label)
