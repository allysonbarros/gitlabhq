%li{ id: dom_id(merge_request), class: mr_css_classes(merge_request), data: { labels: merge_request.label_ids, id: merge_request.id } }
  - if @bulk_edit
    .issue-check
      = check_box_tag dom_id(merge_request, "selected"), nil, false, 'data-id' => merge_request.id, class: "selected_issue"

  .merge-request-title.title
    %span.merge-request-title-text
      = link_to merge_request.title, merge_request_path(merge_request)
    %ul.controls
      - if merge_request.merged?
        %li
          MERGED
      - elsif merge_request.closed?
        %li
          = icon('ban')
          CLOSED

      - if merge_request.head_pipeline
        %li
          = render_pipeline_status(merge_request.head_pipeline)

      - if merge_request.open? && merge_request.broken?
        %li
          = link_to merge_request_path(merge_request), class: "has-tooltip", title: "Cannot be merged automatically", data: { container: 'body' } do
            = icon('exclamation-triangle')

      - if merge_request.assignee
        %li
          = link_to_member(merge_request.source_project, merge_request.assignee, name: false, title: "Assigned to :name")

      - upvotes, downvotes = merge_request.upvotes, merge_request.downvotes
      - if upvotes > 0
        %li
          %span.label.label-success.has-tooltip{title: award_user_list(merge_request.award_emoji.upvotes, current_user), data: { container: 'body' }}
            = icon('thumbs-up')
            = "+#{upvotes}"

      - if downvotes > 0
        %li
          %span.label.label-danger.has-tooltip{title: award_user_list(merge_request.award_emoji.downvotes, current_user), data: { container: 'body' }}
            = icon('thumbs-down')
            = "-#{downvotes}"

      - note_count = merge_request.related_notes.user.count
      %li
        = link_to merge_request_path(merge_request, anchor: 'notes'), class: ('no-comments' if note_count.zero?) do
          = icon('comments')
          = note_count

      - if merge_request.open?
        / Declarando as variáveis
        - resultado_testes = merge_request.resultado_testes
        - commit = merge_request.ultimo_commit

        - if not commit.nil? and not resultado_testes.nil?
          - if resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 1
            %li
              %span.label.label-success
                %i.fa.fa-thumbs-up
                Testes
          - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 2
            %li
              %span.label.label-danger
                %i.fa.fa-thumbs-down
                Testes
          - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 3
            %li
              %span.label.label-danger
                %i.fa.fa-chain-broken
                Em Conflito
          - elsif resultado_testes.ultimo_commit[0..7] == commit.short_id && resultado_testes.resultado == 4
            %li
              %span.label.label-warning
                %i.fa.fa-refresh.fa-spin
                Testes em Execução
          - else
            %li
              %span.label.label-inverse
                %i.fa.fa-thumbs-down
                Testes Pendentes
        - else
          %li
            %span.label.label-inverse
              %i.fa.fa-hourglass
              Testes Pendentes

  .merge-request-info
    #{merge_request.to_reference} &middot;
    opened #{time_ago_with_tooltip(merge_request.created_at, placement: 'bottom')}
    by #{link_to_member(@project, merge_request.author, avatar: false)}
    - if merge_request.target_project.default_branch != merge_request.target_branch
      &nbsp;
      = link_to namespace_project_commits_path(merge_request.project.namespace, merge_request.project, merge_request.target_branch) do
        = icon('code-fork')
        = merge_request.target_branch

    - if merge_request.milestone
      &nbsp;
      = link_to namespace_project_merge_requests_path(merge_request.project.namespace, merge_request.project, milestone_title: merge_request.milestone.title) do
        = icon('clock-o')
        = merge_request.milestone.title

    - if merge_request.labels.any?
      &nbsp;
      - merge_request.labels.each do |label|
        = link_to_label(label, subject: merge_request.project, type: :merge_request)

    - if merge_request.tasks?
      &nbsp;
      %span.task-status
        = merge_request.task_status

    .pull-right.hidden-xs
      %span updated #{time_ago_with_tooltip(merge_request.updated_at, placement: 'bottom', html_class: 'merge_request_updated_ago')}
